diff --git a/third_party/blink/renderer/core/script/classic_pending_script.cc b/third_party/blink/renderer/core/script/classic_pending_script.cc
index 65e1def936b4caa2252b95c92d592deaa59b5884..eeb06ad1674c03e5f14114c60908038ab1b9f9c9 100644
--- a/third_party/blink/renderer/core/script/classic_pending_script.cc
+++ b/third_party/blink/renderer/core/script/classic_pending_script.cc
@@ -28,6 +28,13 @@
 #include "third_party/blink/renderer/platform/runtime_enabled_features.h"
 #include "third_party/blink/renderer/platform/wtf/functional.h"
 
+#include "brave/third_party/blink/brave_page_graph/buildflags/buildflags.h"
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+#include "third_party/blink/renderer/core/dom/dom_node_ids.h"
+#include "brave/third_party/blink/brave_page_graph/types.h"
+#include "brave/third_party/blink/brave_page_graph/page_graph.h"
+#endif
+
 namespace blink {
 
 // <specdef href="https://html.spec.whatwg.org/#fetch-a-classic-script">
@@ -62,8 +69,23 @@ ClassicPendingScript* ClassicPendingScript::Fetch(
   // We allow streaming, as WatchForLoad() is always called when the script
   // needs to execute and the ScriptResource is not finished, so
   // SetClientIsWaitingForFinished is always set on the resource.
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  ScriptResource* resource = ScriptResource::Fetch(params,
+    element_document.Fetcher(), pending_script,
+    ScriptResource::kAllowStreaming);
+  {
+    ::brave_page_graph::PageGraph* page_graph = element->GetDocument()
+      .GetPageGraph();
+    if (page_graph != nullptr) {
+      page_graph->RegisterRequestStartFromElm(
+        DOMNodeIds::IdForNode(static_cast<Node*>(element)), resource->InspectorId(), url,
+        brave_page_graph::RequestType::kRequestTypeScriptClassic);
+    }
+  }
+#else
   ScriptResource::Fetch(params, element_document.Fetcher(), pending_script,
                         ScriptResource::kAllowStreaming);
+#endif
   pending_script->CheckState();
   return pending_script;
 }
@@ -264,6 +286,18 @@ void ClassicPendingScript::NotifyFinished(Resource* resource) {
   }
 
   bool error_occurred = GetResource()->ErrorOccurred() || integrity_failure_;
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  if (element->GetDocument().GetPageGraph() != nullptr) {
+    if (error_occurred) {
+      element->GetDocument().GetPageGraph()->RegisterRequestError(
+        resource->InspectorId());
+    } else {
+      element->GetDocument().GetPageGraph()->RegisterRequestComplete(
+        resource->InspectorId(),
+        resource->GetType());
+    }
+  }
+#endif
   AdvanceReadyState(error_occurred ? kErrorOccurred : kReady);
 }
 
@@ -362,6 +396,17 @@ ClassicScript* ClassicPendingScript::GetSource(const KURL& document_url) const {
 
   ScriptSourceCode source_code(streamer_ready ? streamer : nullptr, resource,
                                not_streamed_reason);
+
+#if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  if (is_external_) {
+    ::brave_page_graph::PageGraph* page_graph = GetElement()->GetDocument()
+      .GetPageGraph();
+    if (page_graph != nullptr) {
+      page_graph->RegisterUrlForScriptSource(resource->Url(), source_code);
+    }
+  }
+#endif
+
   // The base URL for external classic script is
   //
   // <spec href="https://html.spec.whatwg.org/#concept-script-base-url">
